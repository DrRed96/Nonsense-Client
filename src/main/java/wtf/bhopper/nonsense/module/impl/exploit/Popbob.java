package wtf.bhopper.nonsense.module.impl.exploit;

import net.minecraft.item.Item;
import net.minecraft.item.ItemStack;
import net.minecraft.network.play.client.C07PacketPlayerDigging;
import net.minecraft.network.play.client.C10PacketCreativeInventoryAction;
import net.minecraft.util.BlockPos;
import net.minecraft.util.EnumFacing;
import wtf.bhopper.nonsense.event.bus.EventLink;
import wtf.bhopper.nonsense.event.bus.Listener;
import wtf.bhopper.nonsense.event.impl.EventUpdate;
import wtf.bhopper.nonsense.gui.hud.notification.Notification;
import wtf.bhopper.nonsense.gui.hud.notification.NotificationType;
import wtf.bhopper.nonsense.module.Module;
import wtf.bhopper.nonsense.module.ModuleCategory;
import wtf.bhopper.nonsense.module.ModuleInfo;
import wtf.bhopper.nonsense.module.property.impl.NumberProperty;
import wtf.bhopper.nonsense.util.minecraft.ItemBuilder;
import wtf.bhopper.nonsense.util.minecraft.PacketUtil;
import wtf.bhopper.nonsense.util.misc.GeneralUtil;

@ModuleInfo(name = "Popbob", description = "malicious and evil hacking on 2b2t", category = ModuleCategory.EXPLOIT)
public class Popbob extends Module {

    private final NumberProperty amount = new NumberProperty("Amount", "How much to do the funny", 1.0, 1.0, 20.0, 1.0);

    public Popbob() {
        this.addProperties(this.amount);
    }

    @EventLink
    public final Listener<EventUpdate> onUpdate = _ -> {
        if (!mc.thePlayer.capabilities.isCreativeMode) {
            this.toggle(false);
            Notification.send("Popbob", "You must be in creative mode to use the Popbob", NotificationType.ERROR, 3000);
            return;
        }

        Item item;
        do {
            item = Item.itemRegistry.getObject(GeneralUtil.randomElement(Item.itemRegistry.getKeys()));
        } while (item == null || item.getCreativeTab() == null);

        ItemStack stack = ItemBuilder.of(item)
                .setAmount(item.getItemStackLimit())
                .build();

        for (int i = 0; i < amount.getInt(); i++) {
            PacketUtil.send(new C10PacketCreativeInventoryAction(-1, stack));
        }
    };

}
